

--The time period covered is July 2018 - July 2019. 
--This analysis does not consider whether a property was booked or not, rather it looks at listings only

--Q: What is the most expensive listing? What kind of neighborhood is it in?
--A: There were 16 properties offered at a price of $999; comments --indicated that they were made available for the Super Bowl. Two were --from zip 55413 (no neighborhood noted) and two were from zip 55426. --The remaining properties were one per zipcode
--There was one property listed at $998, again with a reference to Super Bowl

WITH 
	max_value
AS
(
SELECT max(cast(replace(l.price, '$', '') as real)) max_price
from listings l
)
 SELECT id, name, neighbourhood, zipcode, cast(replace(l.price, '$', '') as real) num_price
 FROM listings l JOIN max_value on num_price = max_price

--Variation: exclude the $999 properties
--result is a property available for $998

WITH 
	max_value
AS
(
SELECT max(cast(replace(l.price, '$', '') as real)) max_price
from listings l 
WHERE cast(replace(l.price, '$', '') as real) < 999 
)
 SELECT id, name, neighbourhood, zipcode, cast(replace(l.price, '$', '') as real) num_price
 FROM listings l JOIN max_value on num_price = max_price
 order by zipcode


--Q: What neighborhoods seem to be the most popular?
--A: There are 3916 listings without a value in 'neighbourhood' 
--Of those listings that have a value in 'neighbourhood', the Whittier --neighborhood has the most at 141, followed by Elliott Park at 100

SELECT neighbourhood, count(id) as popular
FROM listings 
GROUP BY neighbourhood
ORDER BY popular desc 

--Analyze those listings without a value in neighborhood using zip code
--The zip 55104 (the Summit-University-Hamline neighborhood in St Paul) has the most listings with 199.

SELECT zipcode, count(id) as popular
FROM listings 
WHERE neighbourhood = ''
GROUP BY zipcode
ORDER BY popular desc 

--Q: What time of year is cheapest to stay in this city? What about the --busiest?
--Assumption: Dates when the listing is not available (host has blocked --the dates) are excluded from this analysis
--November and December are the cheapest months to stay (not --surprisingly in this climate)

SELECT substr(date, 1, 7) year_mo,
count(listing_id),
printf("%.2f", avg(cast(replace(l.price, '$', '') as real))) avg_price
FROM calendar c 
JOIN listings l ON l.id = c.listing_id
WHERE available = 't'
GROUP BY year_mo
ORDER BY avg_price


--The busiest months appear to be September, December and August. The --time period covered is July 2018 - July 2019. The further away a date --is, the fewer listings it has
SELECT substr(date, 1, 7) year_mo,
count(listing_id) num_listings,
printf("%.2f", avg(cast(replace(l.price, '$', '') as real))) avg_price
FROM calendar c 
JOIN listings l ON l.id = c.listing_id
WHERE available = 't'
GROUP BY year_mo
ORDER BY num_listings desc
